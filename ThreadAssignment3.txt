#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>

int array[1000];
int chunk_size = 200;

void * add(void * arg){
    int start = (int)arg;
    int end = start + chunk_size;
    int sum = 0;
    int i = 0;
    for(i=0; i<end; i++){
        sum = sum + array[i];
    }
    return ((void*)sum);
}
int main(){
    int status_t1, status_t2, status_t3, status_t4, status_t5, status_t6, status_t7, status_t8, status_t9,status_t10;
    pthread_t thread_t1, thread_t2, thread_t3, thread_t4, thread_t5, thread_t6, thread_t7, thread_t8, thread_t9, thread_t10;
    for (int i=0; i<1000;i++){
        array[i]=i;
    }
    pthread_create(&thread_t1,NULL,add,(void*)(0 * chunk_size));
    pthread_create(&thread_t2,NULL,add,(void*)(1 * chunk_size));
    pthread_create(&thread_t3,NULL,add,(void*)(2 * chunk_size));
    pthread_create(&thread_t4,NULL,add,(void*)(3 * chunk_size));
    pthread_create(&thread_t5,NULL,add,(void*)(4 * chunk_size));
    pthread_create(&thread_t6,NULL,add,(void*)(5 * chunk_size));
    pthread_create(&thread_t7,NULL,add,(void*)(6 * chunk_size));
    pthread_create(&thread_t8,NULL,add,(void*)(7 * chunk_size));
    pthread_create(&thread_t9,NULL,add,(void*)(8 * chunk_size));
    pthread_create(&thread_t10,NULL,add,(void*)(9 * chunk_size));
    
    pthread_join(thread_t1,(void**) & status_t1);
    pthread_join(thread_t2,(void**) & status_t2);
    pthread_join(thread_t3,(void**) & status_t3);
    pthread_join(thread_t4,(void**) & status_t4);
    pthread_join(thread_t5,(void**) & status_t5);
    pthread_join(thread_t6,(void**) & status_t6);
    pthread_join(thread_t7,(void**) & status_t7);
    pthread_join(thread_t8,(void**) & status_t8);
    pthread_join(thread_t9,(void**) & status_t9);
    pthread_join(thread_t10,(void**) & status_t10);
    
    int sum = status_t1+status_t2+status_t3+status_t4+status_t5+status_t6+status_t7+status_t8+status_t9+status_t10;
    printf("\nSum %d\n", sum);
    
    return 0;
}

